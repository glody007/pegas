// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  refresh_token_expires_in Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  role          String?
  email         String?   @unique
  name          String?
  sex           String?
  birthday      DateTime?
  schedules     Schedule[]
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Plan {
  id          String         @id @default(cuid())
  name        String         @unique
  seatsConfig String  
  buses       Bus[]
}

model Bus {
  id              String         @id @default(cuid())
  name            String         @unique
  brand           String
  numberOfSeats   Int
  photoUrl        String
  plan            Plan           @relation(fields: [planId], references: [id])
  planId          String
  schedules       Schedule[]
}


model Route {
  id              String         @id @default(cuid())
  from            String   
  to              String
  duration        Int
  stops           String[]
  schedules       Schedule[]
}

model Schedule {
  id              String         @id @default(cuid())
  start           DateTime
  end             DateTime
  driver          User           @relation(fields: [driverId], references: [id])
  driverId        String
  bus             Bus            @relation(fields: [busId], references: [id])
  busId           String
  route           Route          @relation(fields: [routeId], references: [id])
  routeId         String
  tickets         Ticket[]
}

model Ticket {
  id              String         @id @default(cuid())
  schedule        Schedule       @relation(fields: [scheduleId], references: [id])
  scheduleId      String 
  name            String
  price           Int
  seat            String
}

